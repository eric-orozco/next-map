services:
  postgres:
    image: postgres:15-alpine
    container_name: next-map-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nextmap}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nextmap_password}
      POSTGRES_DB: ${POSTGRES_DB:-nextmap}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    networks:
      - next-map-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-nextmap} -d ${POSTGRES_DB:-nextmap}',
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  app-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: next-map-app-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-nextmap}:${POSTGRES_PASSWORD:-nextmap_password}@postgres:5432/${POSTGRES_DB:-nextmap}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-htNRGS6aWo7B3Z1xkCTvnw8dH5lsAVgO}
      NEXT_PUBLIC_MAP_API_KEY: ${NEXT_PUBLIC_MAP_API_KEY}
      WATCHPACK_POLLING: true
    ports:
      - '${APP_DEV_PORT:-3000}:3000'
    volumes:
      - ..:/app
      - /app/node_modules
      - /app/.next
    networks:
      - next-map-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_dev_data:
    driver: local

networks:
  next-map-network:
    driver: bridge
