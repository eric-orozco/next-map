{"version":3,"sources":["/Users/seaofchaos/Projects/next-map/src/lib/__tests__/i18n.test.tsx"],"sourcesContent":["import { renderHook } from \"@testing-library/react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"@/lib/i18n\";\n\n// Mock i18next to return known values\njest.mock(\"react-i18next\", () => ({\n  useTranslation: jest.fn(),\n}));\n\nconst mockUseTranslation = useTranslation as jest.MockedFunction<\n  typeof useTranslation\n>;\n\ndescribe(\"Internationalization\", () => {\n  beforeEach(() => {\n    const translations: Record<string, string> = {\n      \"common:welcome\": \"Welcome to Next Map\",\n      \"navigation:home\": \"Home\",\n      \"navigation:explore\": \"Explore\",\n      \"auth:signIn\": \"Sign In\",\n      \"map:title\": \"Map Title\",\n      \"errors:generic\": \"An unexpected error occurred\",\n    };\n\n    // Create a simple mock that returns the expected structure\n    mockUseTranslation.mockReturnValue({\n      t: jest.fn((key: string) => translations[key] || key),\n      i18n: {\n        language: \"en\",\n        changeLanguage: jest.fn().mockResolvedValue(undefined),\n      },\n      ready: true,\n    } as unknown as ReturnType<typeof useTranslation>);\n  });\n\n  it(\"should provide translations for common namespace\", () => {\n    const { result } = renderHook(() => useTranslation(\"common\"));\n    expect(result.current.t(\"welcome\")).toBe(\"Welcome to Next Map\");\n  });\n\n  it(\"should provide translations for navigation namespace\", () => {\n    const { result } = renderHook(() => useTranslation(\"navigation\"));\n    expect(result.current.t(\"home\")).toBe(\"Home\");\n    expect(result.current.t(\"explore\")).toBe(\"Explore\");\n  });\n\n  it(\"should provide translations for auth namespace\", () => {\n    const { result } = renderHook(() => useTranslation(\"auth\"));\n    expect(result.current.t(\"signIn\")).toBe(\"Sign In\");\n  });\n\n  it(\"should provide translations for map namespace\", () => {\n    const { result } = renderHook(() => useTranslation(\"map\"));\n    expect(result.current.t(\"title\")).toBe(\"Map Title\");\n  });\n\n  it(\"should provide translations for errors namespace\", () => {\n    const { result } = renderHook(() => useTranslation(\"errors\"));\n    expect(result.current.t(\"generic\")).toBe(\"An unexpected error occurred\");\n  });\n\n  it(\"should handle language switching\", () => {\n    const { result } = renderHook(() => useTranslation());\n    expect(result.current.i18n.language).toBe(\"en\");\n    expect(result.current.i18n.changeLanguage).toBeDefined();\n  });\n});\n"],"names":["jest","mock","useTranslation","fn","mockUseTranslation","describe","beforeEach","translations","mockReturnValue","t","key","i18n","language","changeLanguage","mockResolvedValue","undefined","ready","it","result","renderHook","expect","current","toBe","toBeDefined"],"mappings":";AAIA,sCAAsC;AACtCA,KAAKC,IAAI,CAAC,iBAAiB,IAAO,CAAA;QAChCC,gBAAgBF,KAAKG,EAAE;IACzB,CAAA;;;;uBAP2B;8BACI;QACxB;AAOP,MAAMC,qBAAqBF,4BAAc;AAIzCG,SAAS,wBAAwB;IAC/BC,WAAW;QACT,MAAMC,eAAuC;YAC3C,kBAAkB;YAClB,mBAAmB;YACnB,sBAAsB;YACtB,eAAe;YACf,aAAa;YACb,kBAAkB;QACpB;QAEA,2DAA2D;QAC3DH,mBAAmBI,eAAe,CAAC;YACjCC,GAAGT,KAAKG,EAAE,CAAC,CAACO,MAAgBH,YAAY,CAACG,IAAI,IAAIA;YACjDC,MAAM;gBACJC,UAAU;gBACVC,gBAAgBb,KAAKG,EAAE,GAAGW,iBAAiB,CAACC;YAC9C;YACAC,OAAO;QACT;IACF;IAEAC,GAAG,oDAAoD;QACrD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMjB,IAAAA,4BAAc,EAAC;QACnDkB,OAAOF,OAAOG,OAAO,CAACZ,CAAC,CAAC,YAAYa,IAAI,CAAC;IAC3C;IAEAL,GAAG,wDAAwD;QACzD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMjB,IAAAA,4BAAc,EAAC;QACnDkB,OAAOF,OAAOG,OAAO,CAACZ,CAAC,CAAC,SAASa,IAAI,CAAC;QACtCF,OAAOF,OAAOG,OAAO,CAACZ,CAAC,CAAC,YAAYa,IAAI,CAAC;IAC3C;IAEAL,GAAG,kDAAkD;QACnD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMjB,IAAAA,4BAAc,EAAC;QACnDkB,OAAOF,OAAOG,OAAO,CAACZ,CAAC,CAAC,WAAWa,IAAI,CAAC;IAC1C;IAEAL,GAAG,iDAAiD;QAClD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMjB,IAAAA,4BAAc,EAAC;QACnDkB,OAAOF,OAAOG,OAAO,CAACZ,CAAC,CAAC,UAAUa,IAAI,CAAC;IACzC;IAEAL,GAAG,oDAAoD;QACrD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMjB,IAAAA,4BAAc,EAAC;QACnDkB,OAAOF,OAAOG,OAAO,CAACZ,CAAC,CAAC,YAAYa,IAAI,CAAC;IAC3C;IAEAL,GAAG,oCAAoC;QACrC,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMjB,IAAAA,4BAAc;QAClDkB,OAAOF,OAAOG,OAAO,CAACV,IAAI,CAACC,QAAQ,EAAEU,IAAI,CAAC;QAC1CF,OAAOF,OAAOG,OAAO,CAACV,IAAI,CAACE,cAAc,EAAEU,WAAW;IACxD;AACF"}