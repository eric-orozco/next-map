{"version":3,"names":["changeLanguage","cov_2fhacn7sd9","f","s","default","_i18next","formatCurrency","formatDate","formatNumber","getBrowserLanguage","getCurrentLanguage","getLanguageInfo","getTextDirection","isLanguageSupported","supportedLanguages","translateWithFallback","code","name","flag","isServer","globalThis","window","undefined","use","_i18nexthttpbackend","_i18nextbrowserlanguagedetector","_reacti18next","initReactI18next","init","lng","fallbackLng","debug","process","env","NODE_ENV","supportedLngs","map","lang","interpolation","escapeValue","backend","loadPath","requestOptions","mode","credentials","cache","detection","order","b","caches","defaultNS","ns","react","useSuspense","resources","en","_criticalTranslations","criticalTranslations","preload","initImmediate","language","localStorage","setItem","error","console","find","some","browserLang","navigator","split","date","options","currentLang","Intl","DateTimeFormat","year","month","day","format","num","NumberFormat","amount","currency","style","rtlLanguages","includes","key","fallback","translation","t","translationStr","String"],"sources":["/Users/seaofchaos/Projects/next-map/src/lib/i18n.ts"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { criticalTranslations } from './criticalTranslations';\n\n/**\n * Supported languages configuration\n */\nexport const supportedLanguages = [\n  { code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },\n  { code: 'es', name: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸' },\n  { code: 'fr', name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },\n  { code: 'zh-CN', name: 'ä¸­æ–‡', flag: 'ðŸ‡¨ðŸ‡³' },\n  { code: 'ja', name: 'æ—¥æœ¬èªž', flag: 'ðŸ‡¯ðŸ‡µ' },\n  { code: 'ko', name: 'í•œêµ­ì–´', flag: 'ðŸ‡°ðŸ‡·' },\n  { code: 'no', name: 'Norsk', flag: 'ðŸ‡³ðŸ‡´' },\n  { code: 'pt-BR', name: 'PortuguÃªs', flag: 'ðŸ‡§ðŸ‡·' },\n  { code: 'ar-SA', name: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©', flag: 'ðŸ‡¸ðŸ‡¦' },\n] as const;\n\nexport type SupportedLanguage = (typeof supportedLanguages)[number]['code'];\n\n// Initialize i18next\nconst isServer = globalThis.window === undefined;\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    lng: 'en',\n    fallbackLng: 'en',\n    debug: process.env.NODE_ENV === 'development',\n\n    // Supported languages\n    supportedLngs: supportedLanguages.map(lang => lang.code),\n\n    interpolation: {\n      escapeValue: false, // React already does escaping\n    },\n\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n      requestOptions: {\n        mode: 'cors',\n        credentials: 'same-origin',\n        cache: 'default',\n      },\n    },\n\n    detection: {\n      order: isServer ? ['htmlTag'] : ['localStorage', 'navigator', 'htmlTag'],\n      caches: isServer ? [] : ['localStorage'],\n    },\n\n    defaultNS: 'common',\n    ns: ['common', 'navigation', 'map', 'auth', 'errors', 'homepage'],\n\n    // Configure React i18next for SSR\n    react: {\n      useSuspense: false,\n    },\n\n    // Add critical translations for immediate availability\n    resources: {\n      en: criticalTranslations.en,\n    },\n\n    // Preload namespaces for better SSR\n    preload: supportedLanguages.map(lang => lang.code),\n\n    // Server-side configuration\n    ...(isServer && {\n      initImmediate: false, // Load resources synchronously on server\n    }),\n  });\n\n/**\n * Utility functions for internationalization\n */\n\n/**\n * Change the application language\n */\nexport const changeLanguage = async (\n  language: SupportedLanguage\n): Promise<boolean> => {\n  try {\n    await i18n.changeLanguage(language);\n    // Store the language preference in localStorage\n    localStorage.setItem('i18nextLng', language);\n    return true;\n  } catch (error) {\n    console.error('Failed to change language:', error);\n    return false;\n  }\n};\n\n/**\n * Get the current language\n */\nexport const getCurrentLanguage = (): SupportedLanguage => {\n  return (i18n.language as SupportedLanguage) || 'en';\n};\n\n/**\n * Get language display name and flag\n */\nexport const getLanguageInfo = (code: SupportedLanguage) => {\n  return (\n    supportedLanguages.find(lang => lang.code === code) || supportedLanguages[0]\n  );\n};\n\n/**\n * Check if a language is supported\n */\nexport const isLanguageSupported = (\n  code: string\n): code is SupportedLanguage => {\n  return supportedLanguages.some(lang => lang.code === code);\n};\n\n/**\n * Get browser language preference\n */\nexport const getBrowserLanguage = (): SupportedLanguage => {\n  if (globalThis.window === undefined) return 'en';\n\n  const browserLang = navigator.language.split('-')[0];\n  return isLanguageSupported(browserLang) ? browserLang : 'en';\n};\n\n/**\n * Format a date according to the current locale\n */\nexport const formatDate = (\n  date: Date,\n  options?: Intl.DateTimeFormatOptions\n): string => {\n  const currentLang = getCurrentLanguage();\n  return new Intl.DateTimeFormat(currentLang, {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    ...options,\n  }).format(date);\n};\n\n/**\n * Format a number according to the current locale\n */\nexport const formatNumber = (\n  num: number,\n  options?: Intl.NumberFormatOptions\n): string => {\n  const currentLang = getCurrentLanguage();\n  return new Intl.NumberFormat(currentLang, options).format(num);\n};\n\n/**\n * Format currency according to the current locale\n */\nexport const formatCurrency = (amount: number, currency = 'USD'): string => {\n  const currentLang = getCurrentLanguage();\n  return new Intl.NumberFormat(currentLang, {\n    style: 'currency',\n    currency,\n  }).format(amount);\n};\n\n/**\n * Get text diretion for current language (for RTL support)\n */\nexport const getTextDirection = (): 'ltr' | 'rtl' => {\n  const currentLang = getCurrentLanguage();\n  // RTL languages\n  const rtlLanguages: string[] = ['ar-SA'];\n  return rtlLanguages.includes(currentLang) ? 'rtl' : 'ltr';\n};\n\n/**\n * Translate key with fallback\n */\nexport const translateWithFallback = (\n  key: string,\n  fallback: string,\n  options?: Record<string, unknown>\n): string => {\n  try {\n    const translation = i18n.t(key, options);\n    const translationStr = String(translation);\n    return translationStr === key ? fallback : translationStr;\n  } catch {\n    return fallback;\n  }\n};\n\n// Export the i18n instance as default\nexport { default } from 'i18next';\n"],"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","ignoreList":[]}