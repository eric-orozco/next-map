{"version":3,"sources":["/Users/seaofchaos/Projects/next-map/src/lib/__tests__/i18n.test.tsx"],"sourcesContent":["import { renderHook } from '@testing-library/react';\nimport { useTranslation } from 'react-i18next';\nimport '@/lib/i18n';\n\n// Mock i18next to return known values\njest.mock('react-i18next', () => ({\n  useTranslation: jest.fn(),\n}));\n\nconst mockUseTranslation = useTranslation as jest.MockedFunction<\n  typeof useTranslation\n>;\n\ndescribe('Internationalization', () => {\n  beforeEach(() => {\n    const translations: Record<string, string> = {\n      'common:welcome': 'Welcome to Next Map',\n      'navigation:home': 'Home',\n      'navigation:explore': 'Explore',\n      'auth:signIn': 'Sign In',\n      'map:title': 'Map Title',\n      'errors:generic': 'An unexpected error occurred',\n    };\n\n    // Mock useTranslation to handle namespaces properly\n    mockUseTranslation.mockImplementation(\n      (namespace = 'common') =>\n        ({\n          t: jest.fn((key: string) => {\n            // If key doesn't contain namespace, prepend the current namespace\n            const fullKey = key.includes(':') ? key : `${namespace}:${key}`;\n            return translations[fullKey] || key;\n          }),\n          i18n: {\n            language: 'en',\n            changeLanguage: jest.fn().mockResolvedValue(undefined),\n          },\n          ready: true,\n        }) as unknown as ReturnType<typeof useTranslation>\n    );\n  });\n\n  it('should provide translations for common namespace', () => {\n    const { result } = renderHook(() => useTranslation('common'));\n    expect(result.current.t('welcome')).toBe('Welcome to Next Map');\n  });\n\n  it('should provide translations for navigation namespace', () => {\n    const { result } = renderHook(() => useTranslation('navigation'));\n    expect(result.current.t('home')).toBe('Home');\n    expect(result.current.t('explore')).toBe('Explore');\n  });\n\n  it('should provide translations for auth namespace', () => {\n    const { result } = renderHook(() => useTranslation('auth'));\n    expect(result.current.t('signIn')).toBe('Sign In');\n  });\n\n  it('should provide translations for map namespace', () => {\n    const { result } = renderHook(() => useTranslation('map'));\n    expect(result.current.t('title')).toBe('Map Title');\n  });\n\n  it('should provide translations for errors namespace', () => {\n    const { result } = renderHook(() => useTranslation('errors'));\n    expect(result.current.t('generic')).toBe('An unexpected error occurred');\n  });\n\n  it('should handle language switching', () => {\n    const { result } = renderHook(() => useTranslation());\n    expect(result.current.i18n.language).toBe('en');\n    expect(result.current.i18n.changeLanguage).toBeDefined();\n  });\n});\n"],"names":["jest","mock","useTranslation","fn","mockUseTranslation","describe","beforeEach","translations","mockImplementation","namespace","t","key","fullKey","includes","i18n","language","changeLanguage","mockResolvedValue","undefined","ready","it","result","renderHook","expect","current","toBe","toBeDefined"],"mappings":";AAIA,sCAAsC;AACtCA,KAAKC,IAAI,CAAC,iBAAiB,IAAO,CAAA;QAChCC,gBAAgBF,KAAKG,EAAE;IACzB,CAAA;;;;uBAP2B;8BACI;QACxB;AAOP,MAAMC,qBAAqBF,4BAAc;AAIzCG,SAAS,wBAAwB;IAC/BC,WAAW;QACT,MAAMC,eAAuC;YAC3C,kBAAkB;YAClB,mBAAmB;YACnB,sBAAsB;YACtB,eAAe;YACf,aAAa;YACb,kBAAkB;QACpB;QAEA,oDAAoD;QACpDH,mBAAmBI,kBAAkB,CACnC,CAACC,YAAY,QAAQ,GAClB,CAAA;gBACCC,GAAGV,KAAKG,EAAE,CAAC,CAACQ;oBACV,kEAAkE;oBAClE,MAAMC,UAAUD,IAAIE,QAAQ,CAAC,OAAOF,MAAM,GAAGF,UAAU,CAAC,EAAEE,KAAK;oBAC/D,OAAOJ,YAAY,CAACK,QAAQ,IAAID;gBAClC;gBACAG,MAAM;oBACJC,UAAU;oBACVC,gBAAgBhB,KAAKG,EAAE,GAAGc,iBAAiB,CAACC;gBAC9C;gBACAC,OAAO;YACT,CAAA;IAEN;IAEAC,GAAG,oDAAoD;QACrD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMpB,IAAAA,4BAAc,EAAC;QACnDqB,OAAOF,OAAOG,OAAO,CAACd,CAAC,CAAC,YAAYe,IAAI,CAAC;IAC3C;IAEAL,GAAG,wDAAwD;QACzD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMpB,IAAAA,4BAAc,EAAC;QACnDqB,OAAOF,OAAOG,OAAO,CAACd,CAAC,CAAC,SAASe,IAAI,CAAC;QACtCF,OAAOF,OAAOG,OAAO,CAACd,CAAC,CAAC,YAAYe,IAAI,CAAC;IAC3C;IAEAL,GAAG,kDAAkD;QACnD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMpB,IAAAA,4BAAc,EAAC;QACnDqB,OAAOF,OAAOG,OAAO,CAACd,CAAC,CAAC,WAAWe,IAAI,CAAC;IAC1C;IAEAL,GAAG,iDAAiD;QAClD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMpB,IAAAA,4BAAc,EAAC;QACnDqB,OAAOF,OAAOG,OAAO,CAACd,CAAC,CAAC,UAAUe,IAAI,CAAC;IACzC;IAEAL,GAAG,oDAAoD;QACrD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMpB,IAAAA,4BAAc,EAAC;QACnDqB,OAAOF,OAAOG,OAAO,CAACd,CAAC,CAAC,YAAYe,IAAI,CAAC;IAC3C;IAEAL,GAAG,oCAAoC;QACrC,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMpB,IAAAA,4BAAc;QAClDqB,OAAOF,OAAOG,OAAO,CAACV,IAAI,CAACC,QAAQ,EAAEU,IAAI,CAAC;QAC1CF,OAAOF,OAAOG,OAAO,CAACV,IAAI,CAACE,cAAc,EAAEU,WAAW;IACxD;AACF"}