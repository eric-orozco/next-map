{"version":3,"names":["changeLanguage","cov_2fhacn7sd9","f","s","default","_i18next","formatCurrency","formatDate","formatNumber","getBrowserLanguage","getCurrentLanguage","getLanguageInfo","getTextDirection","isLanguageSupported","supportedLanguages","translateWithFallback","code","name","flag","use","_i18nexthttpbackend","_i18nextbrowserlanguagedetector","_reacti18next","initReactI18next","init","lng","fallbackLng","debug","process","env","NODE_ENV","supportedLngs","map","lang","interpolation","escapeValue","backend","loadPath","detection","order","caches","defaultNS","ns","react","useSuspense","language","localStorage","setItem","error","console","b","find","some","globalThis","window","undefined","browserLang","navigator","split","date","options","currentLang","Intl","DateTimeFormat","year","month","day","format","num","NumberFormat","amount","currency","style","rtlLanguages","includes","key","fallback","translation","t","translationStr","String"],"sources":["/Users/seaofchaos/Projects/next-map/src/lib/i18n.ts"],"sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\n/**\n * Supported languages configuration\n */\nexport const supportedLanguages = [\n  { code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },\n  { code: 'es', name: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸' },\n  { code: 'fr', name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },\n  { code: 'zh-CN', name: 'ä¸­æ–‡', flag: 'ðŸ‡¨ðŸ‡³' },\n  { code: 'ja', name: 'æ—¥æœ¬èªž', flag: 'ðŸ‡¯ðŸ‡µ' },\n  { code: 'ko', name: 'í•œêµ­ì–´', flag: 'ðŸ‡°ðŸ‡·' },\n  { code: 'no', name: 'Norsk', flag: 'ðŸ‡³ðŸ‡´' },\n  { code: 'pt-BR', name: 'PortuguÃªs', flag: 'ðŸ‡§ðŸ‡·' },\n  { code: 'ar-SA', name: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©', flag: 'ðŸ‡¸ðŸ‡¦' },\n] as const;\n\nexport type SupportedLanguage = typeof supportedLanguages[number]['code'];\n\n// Initialize i18next\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    lng: \"en\",\n    fallbackLng: \"en\",\n    debug: process.env.NODE_ENV === \"development\",\n\n    // Supported languages\n    supportedLngs: supportedLanguages.map(lang => lang.code),\n\n    interpolation: {\n      escapeValue: false, // React already does escaping\n    },\n\n    backend: {\n      loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n    },\n\n    detection: {\n      order: [\"localStorage\", \"navigator\", \"htmlTag\"],\n      caches: [\"localStorage\"],\n    },\n\n    defaultNS: \"common\",\n    ns: [\"common\", \"navigation\", \"map\", \"auth\", \"errors\", \"homepage\"],\n\n    // RTL language support\n    react: {\n      useSuspense: false,\n    },\n  });\n\n/**\n * Utility functions for internationalization\n */\n\n/**\n * Change the application language\n */\nexport const changeLanguage = async (language: SupportedLanguage): Promise<boolean> => {\n  try {\n    await i18n.changeLanguage(language);\n    // Store the language preference in localStorage\n    localStorage.setItem('i18nextLng', language);\n    return true;\n  } catch (error) {\n    console.error('Failed to change language:', error);\n    return false;\n  }\n};\n\n/**\n * Get the current language\n */\nexport const getCurrentLanguage = (): SupportedLanguage => {\n  return (i18n.language as SupportedLanguage) || 'en';\n};\n\n/**\n * Get language display name and flag\n */\nexport const getLanguageInfo = (code: SupportedLanguage) => {\n  return supportedLanguages.find(lang => lang.code === code) || supportedLanguages[0];\n};\n\n/**\n * Check if a language is supported\n */\nexport const isLanguageSupported = (code: string): code is SupportedLanguage => {\n  return supportedLanguages.some(lang => lang.code === code);\n};\n\n/**\n * Get browser language preference\n */\nexport const getBrowserLanguage = (): SupportedLanguage => {\n  if (globalThis.window === undefined) return 'en';\n  \n  const browserLang = navigator.language.split('-')[0];\n  return isLanguageSupported(browserLang) ? browserLang : 'en';\n};\n\n/**\n * Format a date according to the current locale\n */\nexport const formatDate = (date: Date, options?: Intl.DateTimeFormatOptions): string => {\n  const currentLang = getCurrentLanguage();\n  return new Intl.DateTimeFormat(currentLang, {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    ...options,\n  }).format(date);\n};\n\n/**\n * Format a number according to the current locale\n */\nexport const formatNumber = (num: number, options?: Intl.NumberFormatOptions): string => {\n  const currentLang = getCurrentLanguage();\n  return new Intl.NumberFormat(currentLang, options).format(num);\n};\n\n/**\n * Format currency according to the current locale\n */\nexport const formatCurrency = (amount: number, currency = 'USD'): string => {\n  const currentLang = getCurrentLanguage();\n  return new Intl.NumberFormat(currentLang, {\n    style: 'currency',\n    currency,\n  }).format(amount);\n};\n\n/**\n * Get text diretion for current language (for RTL support)\n */\nexport const getTextDirection = (): 'ltr' | 'rtl' => {\n  const currentLang = getCurrentLanguage();\n  // RTL languages\n  const rtlLanguages: string[] = ['ar-SA'];\n  return rtlLanguages.includes(currentLang) ? 'rtl' : 'ltr';\n};\n\n/**\n * Translate key with fallback\n */\nexport const translateWithFallback = (\n  key: string, \n  fallback: string, \n  options?: Record<string, unknown>\n): string => {\n  try {\n    const translation = i18n.t(key, options);\n    const translationStr = String(translation);\n    return translationStr === key ? fallback : translationStr;\n  } catch {\n    return fallback;\n  }\n};\n\n// Export the i18n instance as default\nexport { default } from \"i18next\";\n"],"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","ignoreList":[]}